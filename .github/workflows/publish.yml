on: [release]

jobs:
  test:
    uses: ./.github/workflows/ci.yml

  build-wheel:
    needs: test
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: |
          python -m pip install --upgrade build
          python -m build

      - uses: actions/upload-artifact@v3
        with:
          path: dist/wsimod*

      - uses: softprops/action-gh-release@v1
        with:
          files: dist/wsimod*

  publish-TestPyPI:
    needs: build-wheel
    name: Publish WSIMOD to TestPyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Download sdist artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Display structure of downloaded files
        run: ls -R dist

      - name: Publish package distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true

  publish-PyPI:
    needs: publish-TestPyPI
    name: Publish WSIMOD to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Download sdist artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Display structure of downloaded files
        run: ls -R dist

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  publish-docs:
    needs: publish-PyPI
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements-doc.txt

      - name: Deploy Docs
        run: mkdocs gh-deploy --force

  publish-DAFNI:
    needs: publish-docs
    name: Publish WSIMOD to DAFNI
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.event.release.tag_name }}
      DAFNI_USERNAME: ${{ secrets.DAFNI_USERNAME }}
      DAFNI_PASSWORD: ${{ secrets.DAFNI_PASSWORD }}
      PARENT_ID: ${{ vars.PARENT_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4

      - name: Create Docker image
        run: |
          docker build -t wsimod:$VERSION .
          docker save -o wsimod-$VERSION.tar.gz wsimod:$VERSION

      - name: Install DAFNI API
        run: python -m pip install dafni-cli

      - name: Log in to DAFNI
        run: dafni login

      - name: Upload updated model
        run: dafni upload model model_file.yaml wsimod-$VERSION.tar.gz --parent-id $PARENT_ID -m "v$VERSION, see release notes."